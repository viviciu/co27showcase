{"ast":null,"code":"var _jsxFileName = \"/Users/vivianastaicu/Documents/GitHub/co27showcase/co27showcase/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport ForceGraph2D from 'react-force-graph-2d';\nimport ForceGraph3D from 'react-force-graph-3d';\nimport SpriteText from \"three-spritetext\";\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport data from \"./data.json\";\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById('graph'));\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(ForceGraph2D, {\n    backgroundColor: \"#000003\",\n    graphData: data,\n    nodeLabel: node => `${node.description}` // SENIOR QUOTES\n    ,\n    linkColor: () => \"white\"\n    // PORTFOLIO LINKS\n    ,\n    onNodeClick: node => {\n      if (node.url) {\n        window.open(node.url, \"_blank\");\n      }\n    }\n    // FORCE -- failed\n    // d3Force=\"link\"\n    // d3AlphaDecay={0.05}\n    // d3VelocityDecay={0.2}\n    // d3ForceLink={(link) => {\n    //   link.distance = 30; // Adjust this value to make links shorter\n    // }}\n    // d3ForceCharge={(charge) => {\n    //   charge.strength = -50; // Adjust this value to make nodes attract each other more\n    // }}\n\n    // IMGS 2D\n    ,\n    nodeCanvasObject: (node, ctx, globalScale) => {\n      const img = new Image();\n      img.src = node.img;\n      const size = 12 / globalScale; // Adjust the size as needed\n\n      img.onload = () => {\n        ctx.drawImage(img, node.x - size / 2, node.y - size / 2, size, size);\n      };\n      node.__bckgDimensions = [size, size]; // to re-use in nodePointerAreaPaint\n    },\n    nodePointerAreaPaint: (node, color, ctx) => {\n      ctx.fillStyle = color;\n      const bckgDimensions = node.__bckgDimensions;\n      bckgDimensions && ctx.fillRect(node.x - bckgDimensions[0] / 2, node.y - bckgDimensions[1] / 2, ...bckgDimensions);\n    }\n    // IMGS 3D\n    // nodeThreeObject={(node) => {\n    //   const group = new THREE.Group();\n\n    //   // Create image sprite\n    //   const imgTexture = new THREE.TextureLoader().load(node.img);\n    //   const material = new THREE.SpriteMaterial({ map: imgTexture });\n    //   const sprite = new THREE.Sprite(material);\n    //   sprite.scale.set(12, 12);\n    //   group.add(sprite);\n\n    //   // Create text sprite\n    //   const textSprite = new SpriteText(node.name);\n    //   textSprite.color = \"#ffffff\";\n    //   textSprite.textHeight = 5;\n    //   textSprite.position.set(0, -15, 0); // Position text below the image\n    //   group.add(textSprite);\n\n    //   return group;\n    // }}\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 17,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","ForceGraph2D","ForceGraph3D","SpriteText","reportWebVitals","data","THREE","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","render","StrictMode","children","backgroundColor","graphData","nodeLabel","node","description","linkColor","onNodeClick","url","window","open","nodeCanvasObject","ctx","globalScale","img","Image","src","size","onload","drawImage","x","y","__bckgDimensions","nodePointerAreaPaint","color","fillStyle","bckgDimensions","fillRect","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/vivianastaicu/Documents/GitHub/co27showcase/co27showcase/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport ForceGraph2D from 'react-force-graph-2d'\nimport ForceGraph3D from 'react-force-graph-3d'\nimport SpriteText from \"three-spritetext\";\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport data from \"./data.json\";\nimport * as THREE from 'three';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('graph'));\n\n\n\nroot.render(\n  <React.StrictMode>\n    <ForceGraph2D\n      backgroundColor=\"#000003\"\n      graphData={data}\n      nodeLabel={(node) => `${node.description}`} // SENIOR QUOTES\n      linkColor={() => \"white\"}\n      // PORTFOLIO LINKS\n      onNodeClick={(node) => {\n        if (node.url) {\n          window.open(node.url, \"_blank\");\n        }\n      }}\n      // FORCE -- failed\n      // d3Force=\"link\"\n      // d3AlphaDecay={0.05}\n      // d3VelocityDecay={0.2}\n      // d3ForceLink={(link) => {\n      //   link.distance = 30; // Adjust this value to make links shorter\n      // }}\n      // d3ForceCharge={(charge) => {\n      //   charge.strength = -50; // Adjust this value to make nodes attract each other more\n      // }}\n\n      // IMGS 2D\n      nodeCanvasObject={(node, ctx, globalScale) => {\n        const img = new Image();\n        img.src = node.img;\n        const size = 12 / globalScale; // Adjust the size as needed\n\n        img.onload = () => {\n          ctx.drawImage(img, node.x - size / 2, node.y - size / 2, size, size);\n        };\n\n        node.__bckgDimensions = [size, size]; // to re-use in nodePointerAreaPaint\n      }}\n      nodePointerAreaPaint={(node, color, ctx) => {\n        ctx.fillStyle = color;\n        const bckgDimensions = node.__bckgDimensions;\n        bckgDimensions &&\n          ctx.fillRect(\n            node.x - bckgDimensions[0] / 2,\n            node.y - bckgDimensions[1] / 2,\n            ...bckgDimensions\n          );\n      }}\n      // IMGS 3D\n      // nodeThreeObject={(node) => {\n      //   const group = new THREE.Group();\n\n      //   // Create image sprite\n      //   const imgTexture = new THREE.TextureLoader().load(node.img);\n      //   const material = new THREE.SpriteMaterial({ map: imgTexture });\n      //   const sprite = new THREE.Sprite(material);\n      //   sprite.scale.set(12, 12);\n      //   group.add(sprite);\n\n      //   // Create text sprite\n      //   const textSprite = new SpriteText(node.name);\n      //   textSprite.color = \"#ffffff\";\n      //   textSprite.textHeight = 5;\n      //   textSprite.position.set(0, -15, 0); // Position text below the image\n      //   group.add(textSprite);\n\n      //   return group;\n      // }}\n    />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,OAAOC,UAAU,MAAM,kBAAkB;AACzC,OAAO,aAAa;AACpB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG/B,MAAMC,IAAI,GAAGT,QAAQ,CAACU,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC,CAAC;AAIlEH,IAAI,CAACI,MAAM,cACTL,OAAA,CAACT,KAAK,CAACe,UAAU;EAAAC,QAAA,eACfP,OAAA,CAACP,YAAY;IACXe,eAAe,EAAC,SAAS;IACzBC,SAAS,EAAEZ,IAAK;IAChBa,SAAS,EAAGC,IAAI,IAAK,GAAGA,IAAI,CAACC,WAAW,EAAG,CAAC;IAAA;IAC5CC,SAAS,EAAEA,CAAA,KAAM;IACjB;IAAA;IACAC,WAAW,EAAGH,IAAI,IAAK;MACrB,IAAIA,IAAI,CAACI,GAAG,EAAE;QACZC,MAAM,CAACC,IAAI,CAACN,IAAI,CAACI,GAAG,EAAE,QAAQ,CAAC;MACjC;IACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IAAA;IACAG,gBAAgB,EAAEA,CAACP,IAAI,EAAEQ,GAAG,EAAEC,WAAW,KAAK;MAC5C,MAAMC,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;MACvBD,GAAG,CAACE,GAAG,GAAGZ,IAAI,CAACU,GAAG;MAClB,MAAMG,IAAI,GAAG,EAAE,GAAGJ,WAAW,CAAC,CAAC;;MAE/BC,GAAG,CAACI,MAAM,GAAG,MAAM;QACjBN,GAAG,CAACO,SAAS,CAACL,GAAG,EAAEV,IAAI,CAACgB,CAAC,GAAGH,IAAI,GAAG,CAAC,EAAEb,IAAI,CAACiB,CAAC,GAAGJ,IAAI,GAAG,CAAC,EAAEA,IAAI,EAAEA,IAAI,CAAC;MACtE,CAAC;MAEDb,IAAI,CAACkB,gBAAgB,GAAG,CAACL,IAAI,EAAEA,IAAI,CAAC,CAAC,CAAC;IACxC,CAAE;IACFM,oBAAoB,EAAEA,CAACnB,IAAI,EAAEoB,KAAK,EAAEZ,GAAG,KAAK;MAC1CA,GAAG,CAACa,SAAS,GAAGD,KAAK;MACrB,MAAME,cAAc,GAAGtB,IAAI,CAACkB,gBAAgB;MAC5CI,cAAc,IACZd,GAAG,CAACe,QAAQ,CACVvB,IAAI,CAACgB,CAAC,GAAGM,cAAc,CAAC,CAAC,CAAC,GAAG,CAAC,EAC9BtB,IAAI,CAACiB,CAAC,GAAGK,cAAc,CAAC,CAAC,CAAC,GAAG,CAAC,EAC9B,GAAGA,cACL,CAAC;IACL;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;EAAA;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACc,CACpB,CAAC;;AAED;AACA;AACA;AACA1C,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}