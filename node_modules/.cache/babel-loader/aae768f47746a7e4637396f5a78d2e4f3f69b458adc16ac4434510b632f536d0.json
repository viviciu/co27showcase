{"ast":null,"code":"var _jsxFileName = \"/Users/vivianastaicu/Documents/GitHub/co27showcase/co27showcase/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { useEffect } from 'react';\nimport ForceGraph3D from 'react-force-graph-3d';\nimport SpriteText from \"three-spritetext\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport data from \"./data.json\";\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById('graph'));\nconst fgRef = useRef();\nuseEffect(() => {\n  const bloomPass = new UnrealBloomPass();\n  bloomPass.strength = 4;\n  bloomPass.radius = 1;\n  bloomPass.threshold = 0;\n  fgRef.current.postProcessingComposer().addPass(bloomPass);\n}, []);\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(ForceGraph3D, {\n    ref: fgRef,\n    backgroundColor: \"#000003\",\n    graphData: data,\n    nodeAutoColorBy: \"group\"\n    // nodeThreeObject={(node) => {\n    //   const sprite = new SpriteText(node.id);\n    //   sprite.color = node.color;\n    //   sprite.textHeight = 8;\n    //   return sprite;\n    // }}\n    ,\n\n    nodeLabel: node => `${node.description}` // SENIOR QUOTES\n    ,\n    nodeThreeObjectExtend: true\n    // nodeThreeObject={(node) => {\n    //   // extend link with text sprite\n    //   const sprite = new SpriteText(`${node.id}`);\n    //   sprite.color = \"lightgrey\";\n    //   sprite.textHeight = 5;\n    //   // Adjust the position of the sprite to be below the node\n    //   sprite.position.y -= 10; // Adjust this value as needed\n    //   return sprite;\n    // }}\n    ,\n    nodeThreeObject: node => {\n      const imgTexture = new THREE.TextureLoader().load(node.img);\n      console.log(node.img);\n      imgTexture.colorSpace = THREE.SRGBColorSpace;\n      const material = new THREE.SpriteMaterial({\n        map: imgTexture\n      });\n      const sprite = new THREE.Sprite(material);\n      sprite.scale.set(12, 12);\n      return sprite;\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 24,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","useEffect","ForceGraph3D","SpriteText","App","reportWebVitals","data","THREE","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","fgRef","useRef","bloomPass","UnrealBloomPass","strength","radius","threshold","current","postProcessingComposer","addPass","render","StrictMode","children","ref","backgroundColor","graphData","nodeAutoColorBy","nodeLabel","node","description","nodeThreeObjectExtend","nodeThreeObject","imgTexture","TextureLoader","load","img","console","log","colorSpace","SRGBColorSpace","material","SpriteMaterial","map","sprite","Sprite","scale","set","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/vivianastaicu/Documents/GitHub/co27showcase/co27showcase/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { useEffect } from 'react';\nimport ForceGraph3D from 'react-force-graph-3d'\nimport SpriteText from \"three-spritetext\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport data from \"./data.json\";\nimport * as THREE from 'three';\n\nconst root = ReactDOM.createRoot(document.getElementById('graph'));\nconst fgRef = useRef();\n\nuseEffect(() => {\n  const bloomPass = new UnrealBloomPass();\n  bloomPass.strength = 4;\n  bloomPass.radius = 1;\n  bloomPass.threshold = 0;\n  fgRef.current.postProcessingComposer().addPass(bloomPass);\n}, []);\n\nroot.render(\n  <React.StrictMode>\n    <ForceGraph3D\n      ref={fgRef}\n      backgroundColor=\"#000003\"\n      graphData={data}\n      nodeAutoColorBy=\"group\"\n      // nodeThreeObject={(node) => {\n      //   const sprite = new SpriteText(node.id);\n      //   sprite.color = node.color;\n      //   sprite.textHeight = 8;\n      //   return sprite;\n      // }}\n\n      nodeLabel={(node) => `${node.description}`} // SENIOR QUOTES\n      nodeThreeObjectExtend={true}\n      // nodeThreeObject={(node) => {\n      //   // extend link with text sprite\n      //   const sprite = new SpriteText(`${node.id}`);\n      //   sprite.color = \"lightgrey\";\n      //   sprite.textHeight = 5;\n      //   // Adjust the position of the sprite to be below the node\n      //   sprite.position.y -= 10; // Adjust this value as needed\n      //   return sprite;\n      // }}\n      nodeThreeObject={(node) => {\n        const imgTexture = new THREE.TextureLoader().load(node.img);\n        console.log(node.img);\n        imgTexture.colorSpace = THREE.SRGBColorSpace;\n        const material = new THREE.SpriteMaterial({ map: imgTexture });\n        const sprite = new THREE.Sprite(material);\n        sprite.scale.set(12, 12);\n\n        return sprite;\n      }}\n    />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,OAAOC,UAAU,MAAM,kBAAkB;AACzC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,IAAI,GAAGV,QAAQ,CAACW,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC,CAAC;AAClE,MAAMC,KAAK,GAAGC,MAAM,CAAC,CAAC;AAEtBd,SAAS,CAAC,MAAM;EACd,MAAMe,SAAS,GAAG,IAAIC,eAAe,CAAC,CAAC;EACvCD,SAAS,CAACE,QAAQ,GAAG,CAAC;EACtBF,SAAS,CAACG,MAAM,GAAG,CAAC;EACpBH,SAAS,CAACI,SAAS,GAAG,CAAC;EACvBN,KAAK,CAACO,OAAO,CAACC,sBAAsB,CAAC,CAAC,CAACC,OAAO,CAACP,SAAS,CAAC;AAC3D,CAAC,EAAE,EAAE,CAAC;AAENN,IAAI,CAACc,MAAM,cACTf,OAAA,CAACV,KAAK,CAAC0B,UAAU;EAAAC,QAAA,eACfjB,OAAA,CAACP,YAAY;IACXyB,GAAG,EAAEb,KAAM;IACXc,eAAe,EAAC,SAAS;IACzBC,SAAS,EAAEvB,IAAK;IAChBwB,eAAe,EAAC;IAChB;IACA;IACA;IACA;IACA;IACA;IAAA;;IAEAC,SAAS,EAAGC,IAAI,IAAK,GAAGA,IAAI,CAACC,WAAW,EAAG,CAAC;IAAA;IAC5CC,qBAAqB,EAAE;IACvB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAAA;IACAC,eAAe,EAAGH,IAAI,IAAK;MACzB,MAAMI,UAAU,GAAG,IAAI7B,KAAK,CAAC8B,aAAa,CAAC,CAAC,CAACC,IAAI,CAACN,IAAI,CAACO,GAAG,CAAC;MAC3DC,OAAO,CAACC,GAAG,CAACT,IAAI,CAACO,GAAG,CAAC;MACrBH,UAAU,CAACM,UAAU,GAAGnC,KAAK,CAACoC,cAAc;MAC5C,MAAMC,QAAQ,GAAG,IAAIrC,KAAK,CAACsC,cAAc,CAAC;QAAEC,GAAG,EAAEV;MAAW,CAAC,CAAC;MAC9D,MAAMW,MAAM,GAAG,IAAIxC,KAAK,CAACyC,MAAM,CAACJ,QAAQ,CAAC;MACzCG,MAAM,CAACE,KAAK,CAACC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC;MAExB,OAAOH,MAAM;IACf;EAAE;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACc,CACpB,CAAC;;AAED;AACA;AACA;AACAjD,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}