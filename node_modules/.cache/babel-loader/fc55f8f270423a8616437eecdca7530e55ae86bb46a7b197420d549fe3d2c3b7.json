{"ast":null,"code":"var _jsxFileName = \"/Users/vivianastaicu/Documents/GitHub/co27showcase/co27showcase/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport ForceGraph2D from \"react-force-graph-2d\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport data from \"./data.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById(\"graph\"));\n\n// Preload images and store them in a cache\nconst imageCache = {};\nconst preloadImages = nodes => {\n  nodes.forEach(node => {\n    if (node.img && !imageCache[node.img]) {\n      const img = new Image();\n      img.src = node.img;\n      imageCache[node.img] = img;\n    }\n  });\n};\n\n// Preload images\npreloadImages(data.nodes);\nconst nodePaint = (node, ctx, globalScale) => {\n  const img = imageCache[node.img];\n  const size = 10 / globalScale; // Adjust the size as needed\n\n  if (img) {\n    ctx.drawImage(img, node.x - size / 2, node.y - size / 2, size, size);\n  }\n  node.__bckgDimensions = [size, size]; // to re-use in nodePointerAreaPaint\n};\nconst nodePointerAreaPaint = (node, color, ctx) => {\n  ctx.fillStyle = color;\n  const bckgDimensions = node.__bckgDimensions;\n  bckgDimensions && ctx.fillRect(node.x - bckgDimensions[0] / 2, node.y - bckgDimensions[1] / 2, ...bckgDimensions);\n};\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(ForceGraph2D, {\n    backgroundColor: \"#000003\",\n    graphData: data,\n    nodeLabel: node => `${node.description}` // SENIOR QUOTES\n    ,\n    linkColor: () => \"white\",\n    onNodeClick: node => {\n      if (node.url) {\n        window.open(node.url, \"_blank\");\n      }\n    },\n    nodeCanvasObject: (node, ctx, globalScale) => nodePaint(node, ctx, globalScale),\n    nodePointerAreaPaint: nodePointerAreaPaint\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 49,\n  columnNumber: 3\n}, this));\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","ForceGraph2D","reportWebVitals","data","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","imageCache","preloadImages","nodes","forEach","node","img","Image","src","nodePaint","ctx","globalScale","size","drawImage","x","y","__bckgDimensions","nodePointerAreaPaint","color","fillStyle","bckgDimensions","fillRect","render","StrictMode","children","backgroundColor","graphData","nodeLabel","description","linkColor","onNodeClick","url","window","open","nodeCanvasObject","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/vivianastaicu/Documents/GitHub/co27showcase/co27showcase/src/index.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport ForceGraph2D from \"react-force-graph-2d\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport data from \"./data.json\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"graph\"));\n\n// Preload images and store them in a cache\nconst imageCache = {};\n\nconst preloadImages = (nodes) => {\n  nodes.forEach((node) => {\n    if (node.img && !imageCache[node.img]) {\n      const img = new Image();\n      img.src = node.img;\n      imageCache[node.img] = img;\n    }\n  });\n};\n\n// Preload images\npreloadImages(data.nodes);\n\nconst nodePaint = (node, ctx, globalScale) => {\n  const img = imageCache[node.img];\n  const size = 10 / globalScale; // Adjust the size as needed\n\n  if (img) {\n    ctx.drawImage(img, node.x - size / 2, node.y - size / 2, size, size);\n  }\n\n  node.__bckgDimensions = [size, size]; // to re-use in nodePointerAreaPaint\n};\n\nconst nodePointerAreaPaint = (node, color, ctx) => {\n  ctx.fillStyle = color;\n  const bckgDimensions = node.__bckgDimensions;\n  bckgDimensions &&\n    ctx.fillRect(\n      node.x - bckgDimensions[0] / 2,\n      node.y - bckgDimensions[1] / 2,\n      ...bckgDimensions\n    );\n};\n\nroot.render(\n  <React.StrictMode>\n    <ForceGraph2D\n      backgroundColor=\"#000003\"\n      graphData={data}\n      nodeLabel={(node) => `${node.description}`} // SENIOR QUOTES\n      linkColor={() => \"white\"}\n      onNodeClick={(node) => {\n        if (node.url) {\n          window.open(node.url, \"_blank\");\n        }\n      }}\n      nodeCanvasObject={(node, ctx, globalScale) =>\n        nodePaint(node, ctx, globalScale)\n      }\n      nodePointerAreaPaint={nodePointerAreaPaint}\n    />\n  </React.StrictMode>\n);\n\nreportWebVitals();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}