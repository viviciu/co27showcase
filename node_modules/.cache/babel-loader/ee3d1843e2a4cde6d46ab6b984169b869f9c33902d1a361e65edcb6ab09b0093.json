{"ast":null,"code":"import _toConsumableArray from \"/Users/vivianastaicu/Documents/GitHub/co27showcase/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nvar _jsxFileName = \"/Users/vivianastaicu/Documents/GitHub/co27showcase/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport ForceGraph2D from \"react-force-graph-2d\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport data from \"./data.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar root = ReactDOM.createRoot(document.getElementById(\"graph\"));\n\n// Preload images and store them in a cache\nvar imageCache = {};\nvar preloadImages = function preloadImages(nodes) {\n  nodes.forEach(function (node) {\n    if (node.img && !imageCache[node.img]) {\n      var img = new Image();\n      img.src = node.img;\n      imageCache[node.img] = img;\n    }\n  });\n};\n\n// Preload images\npreloadImages(data.nodes);\nvar nodePaint = function nodePaint(node, ctx, globalScale) {\n  var img = imageCache[node.img];\n  var size = (node.val || 30) / globalScale; // Adjust the size as needed\n\n  if (img) {\n    ctx.drawImage(img, node.x - size / 2, node.y - size / 2, size, size);\n  }\n  node.__bckgDimensions = [size, size]; // to re-use in nodePointerAreaPaint\n};\n// TEST COMMENT\nvar nodeLabelPaint = function nodeLabelPaint(node, ctx, globalScale) {\n  if (node.group === \"TRACK\") {\n    // Draws label only for TRACK nodes\n    var label = node.description;\n    var fontSize = 12 / globalScale;\n    ctx.font = \"\".concat(fontSize, \"px Sans-Serif\");\n    ctx.textAlign = \"center\";\n    ctx.textBaseline = \"middle\";\n    ctx.fillStyle = \"black\"; // Change this to your desired text color\n    ctx.fillText(label, node.x, node.y + 20); // Adjust the position as needed\n  }\n};\nvar nodePointerAreaPaint = function nodePointerAreaPaint(node, color, ctx) {\n  ctx.fillStyle = color;\n  var bckgDimensions = node.__bckgDimensions;\n  bckgDimensions && ctx.fillRect.apply(ctx, [node.x - bckgDimensions[0] / 2, node.y - bckgDimensions[1] / 2].concat(_toConsumableArray(bckgDimensions)));\n};\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(ForceGraph2D, {\n    backgroundColor: \"#ffffff\",\n    graphData: data,\n    nodeLabel: function nodeLabel(node) {\n      return node.group !== \"TRACK\" ? \"\".concat(node.id) : \"\";\n    } // SENIOR QUOTES: set node.description. NAMES: set node.id. if node is not a track\n    ,\n    linkColor: function linkColor() {\n      return \"black\";\n    },\n    onNodeClick: function onNodeClick(node) {\n      if (node.url) {\n        window.open(node.url, \"_blank\");\n      }\n    },\n    nodeCanvasObject: function nodeCanvasObject(node, ctx, globalScale) {\n      nodePaint(node, ctx, globalScale);\n      nodeLabelPaint(node, ctx, globalScale); // labels underneath items\n    },\n    nodePointerAreaPaint: nodePointerAreaPaint,\n    d3Force: \"link\",\n    d3AlphaDecay: 0.05,\n    d3VelocityDecay: 0.2,\n    d3ForceLink: function d3ForceLink(link) {\n      link.distance = 100; // Adjust this value to change the link length\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 62,\n  columnNumber: 3\n}, this));\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","ForceGraph2D","reportWebVitals","data","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","imageCache","preloadImages","nodes","forEach","node","img","Image","src","nodePaint","ctx","globalScale","size","val","drawImage","x","y","__bckgDimensions","nodeLabelPaint","group","label","description","fontSize","font","concat","textAlign","textBaseline","fillStyle","fillText","nodePointerAreaPaint","color","bckgDimensions","fillRect","apply","_toConsumableArray","render","StrictMode","children","backgroundColor","graphData","nodeLabel","id","linkColor","onNodeClick","url","window","open","nodeCanvasObject","d3Force","d3AlphaDecay","d3VelocityDecay","d3ForceLink","link","distance","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/vivianastaicu/Documents/GitHub/co27showcase/src/index.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport ForceGraph2D from \"react-force-graph-2d\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport data from \"./data.json\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"graph\"));\n\n// Preload images and store them in a cache\nconst imageCache = {};\n\nconst preloadImages = (nodes) => {\n  nodes.forEach((node) => {\n    if (node.img && !imageCache[node.img]) {\n      const img = new Image();\n      img.src = node.img;\n      imageCache[node.img] = img;\n    }\n  });\n};\n\n// Preload images\npreloadImages(data.nodes);\n\nconst nodePaint = (node, ctx, globalScale) => {\n  const img = imageCache[node.img];\n  const size = (node.val || 30) / globalScale; // Adjust the size as needed\n\n  if (img) {\n    ctx.drawImage(img, node.x - size / 2, node.y - size / 2, size, size);\n  }\n\n  node.__bckgDimensions = [size, size]; // to re-use in nodePointerAreaPaint\n};\n// TEST COMMENT\nconst nodeLabelPaint = (node, ctx, globalScale) => {\n  if (node.group === \"TRACK\") {\n    // Draws label only for TRACK nodes\n    const label = node.description;\n    const fontSize = 12 / globalScale;\n    ctx.font = `${fontSize}px Sans-Serif`;\n    ctx.textAlign = \"center\";\n    ctx.textBaseline = \"middle\";\n    ctx.fillStyle = \"black\"; // Change this to your desired text color\n    ctx.fillText(label, node.x, node.y + 20); // Adjust the position as needed\n  }\n};\n\nconst nodePointerAreaPaint = (node, color, ctx) => {\n  ctx.fillStyle = color;\n  const bckgDimensions = node.__bckgDimensions;\n  bckgDimensions &&\n    ctx.fillRect(\n      node.x - bckgDimensions[0] / 2,\n      node.y - bckgDimensions[1] / 2,\n      ...bckgDimensions\n    );\n};\n\nroot.render(\n  <React.StrictMode>\n    <ForceGraph2D\n      backgroundColor=\"#ffffff\"\n      graphData={data}\n      nodeLabel={(node) => (node.group !== \"TRACK\" ? `${node.id}` : \"\")} // SENIOR QUOTES: set node.description. NAMES: set node.id. if node is not a track\n      linkColor={() => \"black\"}\n      onNodeClick={(node) => {\n        if (node.url) {\n          window.open(node.url, \"_blank\");\n        }\n      }}\n      nodeCanvasObject={(node, ctx, globalScale) => {\n        nodePaint(node, ctx, globalScale);\n        nodeLabelPaint(node, ctx, globalScale); // labels underneath items\n      }}\n      nodePointerAreaPaint={nodePointerAreaPaint}\n      d3Force=\"link\"\n      d3AlphaDecay={0.05}\n      d3VelocityDecay={0.2}\n      d3ForceLink={(link) => {\n        link.distance = 100; // Adjust this value to change the link length\n      }}\n    />\n  </React.StrictMode>\n);\n\nreportWebVitals();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}