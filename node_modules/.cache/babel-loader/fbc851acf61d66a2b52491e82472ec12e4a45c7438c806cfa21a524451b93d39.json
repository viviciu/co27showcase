{"ast":null,"code":"var _jsxFileName = \"/Users/vivianastaicu/Documents/GitHub/co27showcase/co27showcase/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport ForceGraph2D from \"react-force-graph-2d\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport data from \"./data.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById(\"graph\"));\nconst nodePaint = (node, ctx, globalScale) => {\n  const img = new Image();\n  img.src = node.img;\n  const size = 50 / globalScale; // Adjust the size as needed\n\n  img.onload = () => {\n    ctx.drawImage(img, node.x - size / 2, node.y - size / 2, size, size);\n  };\n\n  // Draw the image immediately if it's already loaded\n  if (img.complete) {\n    ctx.drawImage(img, node.x - size / 2, node.y - size / 2, size, size);\n  }\n  node.__bckgDimensions = [size, size]; // to re-use in nodePointerAreaPaint\n};\nconst nodePointerAreaPaint = (node, color, ctx) => {\n  ctx.fillStyle = color;\n  const bckgDimensions = node.__bckgDimensions;\n  bckgDimensions && ctx.fillRect(node.x - bckgDimensions[0] / 2, node.y - bckgDimensions[1] / 2, ...bckgDimensions);\n};\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(ForceGraph2D, {\n    backgroundColor: \"#000003\",\n    graphData: data,\n    nodeLabel: node => `${node.description}` // SENIOR QUOTES\n    ,\n    linkColor: () => \"white\",\n    onNodeClick: node => {\n      if (node.url) {\n        window.open(node.url, \"_blank\");\n      }\n    },\n    nodeCanvasObject: (node, ctx, globalScale) => nodePaint(node, ctx, globalScale),\n    nodePointerAreaPaint: nodePointerAreaPaint\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 39,\n  columnNumber: 3\n}, this));\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","ForceGraph2D","reportWebVitals","data","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","nodePaint","node","ctx","globalScale","img","Image","src","size","onload","drawImage","x","y","complete","__bckgDimensions","nodePointerAreaPaint","color","fillStyle","bckgDimensions","fillRect","render","StrictMode","children","backgroundColor","graphData","nodeLabel","description","linkColor","onNodeClick","url","window","open","nodeCanvasObject","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/vivianastaicu/Documents/GitHub/co27showcase/co27showcase/src/index.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport ForceGraph2D from \"react-force-graph-2d\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport data from \"./data.json\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"graph\"));\n\nconst nodePaint = (node, ctx, globalScale) => {\n  const img = new Image();\n  img.src = node.img;\n  const size = 50 / globalScale; // Adjust the size as needed\n\n  img.onload = () => {\n    ctx.drawImage(img, node.x - size / 2, node.y - size / 2, size, size);\n  };\n\n  // Draw the image immediately if it's already loaded\n  if (img.complete) {\n    ctx.drawImage(img, node.x - size / 2, node.y - size / 2, size, size);\n  }\n\n  node.__bckgDimensions = [size, size]; // to re-use in nodePointerAreaPaint\n};\n\nconst nodePointerAreaPaint = (node, color, ctx) => {\n  ctx.fillStyle = color;\n  const bckgDimensions = node.__bckgDimensions;\n  bckgDimensions &&\n    ctx.fillRect(\n      node.x - bckgDimensions[0] / 2,\n      node.y - bckgDimensions[1] / 2,\n      ...bckgDimensions\n    );\n};\n\nroot.render(\n  <React.StrictMode>\n    <ForceGraph2D\n      backgroundColor=\"#000003\"\n      graphData={data}\n      nodeLabel={(node) => `${node.description}`} // SENIOR QUOTES\n      linkColor={() => \"white\"}\n      onNodeClick={(node) => {\n        if (node.url) {\n          window.open(node.url, \"_blank\");\n        }\n      }}\n      nodeCanvasObject={(node, ctx, globalScale) =>\n        nodePaint(node, ctx, globalScale)\n      }\n      nodePointerAreaPaint={nodePointerAreaPaint}\n    />\n  </React.StrictMode>\n);\n\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,OAAO,aAAa;AACpB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,IAAI,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,IAAI,GAAGN,QAAQ,CAACO,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC,CAAC;AAElE,MAAMC,SAAS,GAAGA,CAACC,IAAI,EAAEC,GAAG,EAAEC,WAAW,KAAK;EAC5C,MAAMC,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;EACvBD,GAAG,CAACE,GAAG,GAAGL,IAAI,CAACG,GAAG;EAClB,MAAMG,IAAI,GAAG,EAAE,GAAGJ,WAAW,CAAC,CAAC;;EAE/BC,GAAG,CAACI,MAAM,GAAG,MAAM;IACjBN,GAAG,CAACO,SAAS,CAACL,GAAG,EAAEH,IAAI,CAACS,CAAC,GAAGH,IAAI,GAAG,CAAC,EAAEN,IAAI,CAACU,CAAC,GAAGJ,IAAI,GAAG,CAAC,EAAEA,IAAI,EAAEA,IAAI,CAAC;EACtE,CAAC;;EAED;EACA,IAAIH,GAAG,CAACQ,QAAQ,EAAE;IAChBV,GAAG,CAACO,SAAS,CAACL,GAAG,EAAEH,IAAI,CAACS,CAAC,GAAGH,IAAI,GAAG,CAAC,EAAEN,IAAI,CAACU,CAAC,GAAGJ,IAAI,GAAG,CAAC,EAAEA,IAAI,EAAEA,IAAI,CAAC;EACtE;EAEAN,IAAI,CAACY,gBAAgB,GAAG,CAACN,IAAI,EAAEA,IAAI,CAAC,CAAC,CAAC;AACxC,CAAC;AAED,MAAMO,oBAAoB,GAAGA,CAACb,IAAI,EAAEc,KAAK,EAAEb,GAAG,KAAK;EACjDA,GAAG,CAACc,SAAS,GAAGD,KAAK;EACrB,MAAME,cAAc,GAAGhB,IAAI,CAACY,gBAAgB;EAC5CI,cAAc,IACZf,GAAG,CAACgB,QAAQ,CACVjB,IAAI,CAACS,CAAC,GAAGO,cAAc,CAAC,CAAC,CAAC,GAAG,CAAC,EAC9BhB,IAAI,CAACU,CAAC,GAAGM,cAAc,CAAC,CAAC,CAAC,GAAG,CAAC,EAC9B,GAAGA,cACL,CAAC;AACL,CAAC;AAEDrB,IAAI,CAACuB,MAAM,cACTxB,OAAA,CAACN,KAAK,CAAC+B,UAAU;EAAAC,QAAA,eACf1B,OAAA,CAACJ,YAAY;IACX+B,eAAe,EAAC,SAAS;IACzBC,SAAS,EAAE9B,IAAK;IAChB+B,SAAS,EAAGvB,IAAI,IAAK,GAAGA,IAAI,CAACwB,WAAW,EAAG,CAAC;IAAA;IAC5CC,SAAS,EAAEA,CAAA,KAAM,OAAQ;IACzBC,WAAW,EAAG1B,IAAI,IAAK;MACrB,IAAIA,IAAI,CAAC2B,GAAG,EAAE;QACZC,MAAM,CAACC,IAAI,CAAC7B,IAAI,CAAC2B,GAAG,EAAE,QAAQ,CAAC;MACjC;IACF,CAAE;IACFG,gBAAgB,EAAEA,CAAC9B,IAAI,EAAEC,GAAG,EAAEC,WAAW,KACvCH,SAAS,CAACC,IAAI,EAAEC,GAAG,EAAEC,WAAW,CACjC;IACDW,oBAAoB,EAAEA;EAAqB;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACc,CACpB,CAAC;AAED3C,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}