{"ast":null,"code":"var _jsxFileName = \"/Users/vivianastaicu/Documents/GitHub/co27showcase/co27showcase/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport ForceGraph3D from 'react-force-graph-3d';\nimport SpriteText from \"three-spritetext\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport data from \"./data.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById('graph'));\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(ForceGraph3D, {\n    graphData: data,\n    nodeAutoColorBy: \"group\"\n    // nodeThreeObject={(node) => {\n    //   const sprite = new SpriteText(node.id);\n    //   sprite.color = node.color;\n    //   sprite.textHeight = 8;\n    //   return sprite;\n    // }}\n    ,\n\n    nodeLabel: node => `${node.description}`,\n    nodeThreeObjectExtend: true,\n    nodeThreeObject: link => {\n      // extend link with text sprite\n      const sprite = new SpriteText(`${node.id}`);\n      sprite.color = \"lightgrey\";\n      sprite.textHeight = 1.5;\n      return sprite;\n    },\n    linkPositionUpdate: (sprite, {\n      start,\n      end\n    }) => {\n      const middlePos = Object.assign(...[\"x\", \"y\", \"z\"].map(c => ({\n        [c]: start[c] + (end[c] - start[c]) / 2 // calc middle point\n      })));\n\n      // Position sprite\n      Object.assign(sprite.position, middlePos);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","ForceGraph3D","SpriteText","App","reportWebVitals","data","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","render","StrictMode","children","graphData","nodeAutoColorBy","nodeLabel","node","description","nodeThreeObjectExtend","nodeThreeObject","link","sprite","id","color","textHeight","linkPositionUpdate","start","end","middlePos","Object","assign","map","c","position","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/vivianastaicu/Documents/GitHub/co27showcase/co27showcase/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport ForceGraph3D from 'react-force-graph-3d'\nimport SpriteText from \"three-spritetext\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport data from \"./data.json\";\n\nconst root = ReactDOM.createRoot(document.getElementById('graph'));\nroot.render(\n  <React.StrictMode>\n    <ForceGraph3D\n      graphData={data}\n      nodeAutoColorBy=\"group\"\n      // nodeThreeObject={(node) => {\n      //   const sprite = new SpriteText(node.id);\n      //   sprite.color = node.color;\n      //   sprite.textHeight = 8;\n      //   return sprite;\n      // }}\n\n      nodeLabel={(node) => `${node.description}`}\n      nodeThreeObjectExtend={true}\n      nodeThreeObject={(link) => {\n        // extend link with text sprite\n        const sprite = new SpriteText(`${node.id}`);\n        sprite.color = \"lightgrey\";\n        sprite.textHeight = 1.5;\n        return sprite;\n      }}\n      linkPositionUpdate={(sprite, { start, end }) => {\n        const middlePos = Object.assign(\n          ...[\"x\", \"y\", \"z\"].map((c) => ({\n            [c]: start[c] + (end[c] - start[c]) / 2, // calc middle point\n          }))\n        );\n\n        // Position sprite\n        Object.assign(sprite.position, middlePos);\n      }}\n    />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,OAAOC,UAAU,MAAM,kBAAkB;AACzC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,IAAI,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,IAAI,GAAGR,QAAQ,CAACS,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC,CAAC;AAClEH,IAAI,CAACI,MAAM,cACTL,OAAA,CAACR,KAAK,CAACc,UAAU;EAAAC,QAAA,eACfP,OAAA,CAACN,YAAY;IACXc,SAAS,EAAEV,IAAK;IAChBW,eAAe,EAAC;IAChB;IACA;IACA;IACA;IACA;IACA;IAAA;;IAEAC,SAAS,EAAGC,IAAI,IAAK,GAAGA,IAAI,CAACC,WAAW,EAAG;IAC3CC,qBAAqB,EAAE,IAAK;IAC5BC,eAAe,EAAGC,IAAI,IAAK;MACzB;MACA,MAAMC,MAAM,GAAG,IAAIrB,UAAU,CAAC,GAAGgB,IAAI,CAACM,EAAE,EAAE,CAAC;MAC3CD,MAAM,CAACE,KAAK,GAAG,WAAW;MAC1BF,MAAM,CAACG,UAAU,GAAG,GAAG;MACvB,OAAOH,MAAM;IACf,CAAE;IACFI,kBAAkB,EAAEA,CAACJ,MAAM,EAAE;MAAEK,KAAK;MAAEC;IAAI,CAAC,KAAK;MAC9C,MAAMC,SAAS,GAAGC,MAAM,CAACC,MAAM,CAC7B,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAACC,GAAG,CAAEC,CAAC,KAAM;QAC7B,CAACA,CAAC,GAAGN,KAAK,CAACM,CAAC,CAAC,GAAG,CAACL,GAAG,CAACK,CAAC,CAAC,GAAGN,KAAK,CAACM,CAAC,CAAC,IAAI,CAAC,CAAE;MAC3C,CAAC,CAAC,CACJ,CAAC;;MAED;MACAH,MAAM,CAACC,MAAM,CAACT,MAAM,CAACY,QAAQ,EAAEL,SAAS,CAAC;IAC3C;EAAE;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACc,CACpB,CAAC;;AAED;AACA;AACA;AACAnC,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}